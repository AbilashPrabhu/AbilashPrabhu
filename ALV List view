
REPORT zprd3.
DATA : lv_vbeln TYPE vbeln.

SELECT-OPTIONS S_vbeln FOR lv_vbeln.
" item header table VBAK

TYPES : BEGIN OF ly_sty,
          vbeln TYPE vbeln_va,
          erdat TYPE erdat,
          erzet TYPE erzet,
          ernam TYPE ernam,
        END OF ly_sty.

DATA : lt_tab  TYPE TABLE OF ly_sty.
DATA : wa_tab TYPE ly_sty.
" item table VBAp

TYPES : BEGIN OF Ly_sty2,
          vbeln TYPE vbeln_va,
          posnr TYPE posnr_va,
          matnr TYPE matnr,
          pstyv TYPE pstyv,
        END OF ly_sty2.

DATA : lt_tab1  TYPE TABLE OF ly_sty2.
DATA : wa_tab1 TYPE ly_sty2.
data : lt_fieldcat type SLIS_T_FIELDCAT_ALV.

data : lt_final type table of ZVBAK_VBAP.
data : wa_final type ZVBAK_VBAP.


SELECT vbeln erdat erzet ernam
  FROM vbak
  INTO TABLE lt_tab
  WHERE vbeln IN s_vbeln.


IF lt_tab IS NOT INITIAL.
  SELECT vbeln posnr matnr pstyv
    FROM vbap
    INTO TABLE lt_tab1
    FOR ALL ENTRIES IN lt_tab
    WHERE vbeln = lt_tab-vbeln.
ENDIF.

LOOP AT lt_tab into wa_tab.
  LOOP AT lt_tab1 into wa_tab1 where vbeln = wa_tab-vbeln .
    wa_final-vbeln = lt_tab-vblen.
    wa_final-erdat = lt_tab-erdat.
    wa_final-erzet = lt_tab-erzet.
    wa_final-ernam = lt_tab-ernam.
    wa_final-posnr = lt_tab1-posnr.
    wa_final-matnr = lt_tab1-matnr.
    wa_final-pstyv = lt_tab1-pstyv.
    append Wa_final to lt_final.
    Clear : wa_final.
  ENDLOOP.
ENDLOOP.



CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
 EXPORTING
*   I_PROGRAM_NAME               =
*   I_INTERNAL_TABNAME           =
   I_STRUCTURE_NAME             = 'ZVBAK_VBAP'
*   I_CLIENT_NEVER_DISPLAY       = 'X'
*   I_INCLNAME                   =
*   I_BYPASSING_BUFFER           =
*   I_BUFFER_ACTIVE              =
  CHANGING
    ct_fieldcat                  = lt_fieldcat
 EXCEPTIONS
   INCONSISTENT_INTERFACE       = 1
   PROGRAM_ERROR                = 2
   OTHERS                       = 3
          .
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.
