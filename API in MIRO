  METHOD IF_HTTP_EXTENSION~HANDLE_REQUEST.

    CALL METHOD ME->GET_USERDETAILS
      EXPORTING
        SERVER   = SERVER           " HTTP Framework (iHTTP) HTTP Server
      IMPORTING
        FROMDATE = DATA(FROMDATE)             " ABAP system field: Current date of application server
        TODATE   = DATA(TODATE).             " Posting Date in the Document

    DATA: S_DATE TYPE RANGE OF SY-DATUM.

    APPEND VALUE #( SIGN = 'I' OPTION = 'BT' LOW = FROMDATE HIGH = TODATE ) TO S_DATE.

    TYPES : BEGIN OF TY_STRU,
              INVOICENO            TYPE BELNR_D,
              COMPANY              TYPE BUKRS,
              TRANSACTIONTYPE      TYPE char10,
              DOCUMENTDATE         TYPE BLDAT,
              REFERENCE            TYPE XBLNR1,
              POSTINGDATE          TYPE BUDAT,
              AMOUNT               TYPE CHAR15,
              CURRENCY             TYPE WAERS,
              CALCULATETAX         TYPE CHAR1,
              TAXAMOUNT            TYPE CHAR15,
              TAXCODE              TYPE MWSKZ,
              TAXDESC              TYPE CHAR30,
              BUSPLACESECT         TYPE CHAR15,
              TEXT                 TYPE CHAR30,
              PAYMENTTERMS         TYPE CHAR30,
              IRPROCESSER          TYPE CHAR20,
              DELIVERYNOTE         TYPE CHAR20,
              REFNO                TYPE CHAR10,
              ITEM                 TYPE CHAR6,
              AMOUNT2              TYPE CHAR15,
              QUANTITY             TYPE CHAR15,
              ORDERUNITOFMES       TYPE MEINS,
              OK                   TYPE CHAR1,
              PURCHASEORDERNO      TYPE EBELN,
              PURCHASEORDERITEM    TYPE char6,
              POTEXT               TYPE CHAR30,
              TAXCODE1             TYPE CHAR30,
              BUSINESSAREA         TYPE CHAR4,
              PROFITCENTER         TYPE PRCTR,
              QUANTITYRECV         TYPE CHAR15,
              GRQTYINOPUR          TYPE CHAR15,
              QTYORDERED           TYPE CHAR15,
              NETPOVALUE           TYPE CHAR15,
              NETPRICE             TYPE CHAR15,
              POCURRENCY           TYPE CHAR15,
              PRICEUNIT            TYPE CHAR5,
              REFDOCNOITEMREFDOCNO TYPE CHAR10,
              REFERENCRDOCUMENT    TYPE LFBNR,
              DELIVERYNOTESHEETNO  TYPE XBLNR,
              DELIVERYNOTEQTY      TYPE CHAR15,
              MATERIAL             TYPE MATNR,
              MATERIALNAME         TYPE MAKTX,
              BASICUOM             TYPE MEINS,
              MATERIALGROUP        TYPE MATKL,
              MATERIALGROUPDESC    TYPE CHAR30,
              PLANT                TYPE WERKS_D,
              VALUATIONAREA        TYPE BWKEY,
              STOCKMATERIAL        TYPE MATNR,
              BUSINESSPLACE        TYPE CHAR4,
              DELIVERYDATE         TYPE CHAR10,
              CREATEDBY            TYPE ERNAM,
*             sing(+/-)              type
              VARIANCETYPE         TYPE CHAR5,
              HSCSACCODE           TYPE CHAR10,
              VENDORCODE           TYPE LIFNR,
              VENDORNAME           TYPE CHAR100,
              STATUS               TYPE CHAR50,
              GLACCOUNT            TYPE CHAR50,
              SHORTTEXT            TYPE CHAR50,
              DEBITCREDIT          TYPE CHAR10,
              AMOUNTINDOCCURRENCY  TYPE CHAR50,
              LOCALCURRENYAMOUNT   TYPE CHAR50,
              TAXCODE2             TYPE CHAR50,
            END OF TY_STRU.

    DATA : IT_FINAL TYPE TABLE OF TY_STRU,
           WA_FINAL TYPE TY_STRU.



    SELECT A~BELNR AS INVOICENO ,
           A~GJAHR AS YEAR,
           A~BUKRS AS COMPANY,
           A~BLART AS TRANSACTIONTYPE,
           A~BLDAT AS DOCUMENTDATE,
           A~BUDAT AS POSTINGDATE,
           A~XBLNR AS REFERENCE,
           A~RMWWR AS AMOUNT,
           A~WAERS AS CURRENCY,
           A~WAERS AS POCURRENCY,
           A~XMWST AS CALCULATETAX,
           A~WMWST1 AS TAXAMOUNT,
           A~MWSKZ1 AS TAXCODE,
           A~BUPLA AS BUSPLACE,
           A~SECCO AS SECT,
           A~SGTXT AS TEXT,
           A~ZTERM AS PAYMENTTERMS,
           B~BUZEI AS ITEM,
           B~WRBTR AS AMOUNT2,
           B~MENGE AS QUANTITY,
           B~BSTME AS ORDERUNIT,
           B~MRMOK AS OK,
           B~EBELN AS PURCHASEORDERNO,
           B~EBELP AS PURCHASEORDERITEM,
           C~TXZ01 AS POTEXT,
           B~MWSKZ AS TAXCODE1,
           C~KO_GSBER AS BUSINESSAREA,
           C~KO_PRCTR AS PROFITCENTER,
*           D~WEMNG AS QUANTITYRECV,
           E~LSMNG AS QUANTITYRECV,
*           B~BPMNG AS QTYORDERED,
           C~MENGE AS QTYORDERED,
           C~NETWR AS NETPOVALUE,
           C~NETPR AS NETPRICE,
           C~PEINH AS PRICEUNIT,
           B~LFBNR AS REFERENCRDOCUMENT,
           B~XBLNR AS DELIVERYNOTESHEETNO,
           E~LSMNG AS DELIVERYNOTEQTY,
           E~BPMNG AS GRQTYINOPUR,
           B~MATNR AS MATERIAL,
           F~MAKTX AS MATERIALNAME,
           G~MATKL AS MATERIALGROUP,
           B~WERKS AS PLANT,
           B~BWKEY AS VALUATIONAREA,
           B~MATBF AS STOCKMATERIAL,
           D~EINDT AS DELIVERYDATE,
           A~USNAM AS IRPROCESSER,
           B~HSN_SAC AS HSCSACCODE,
           A~LIFNR AS VENDORCODE
         FROM RBKP AS A
         LEFT OUTER JOIN RSEG AS B
         ON ( A~BELNR = B~BELNR )
         LEFT OUTER JOIN EKPO AS C
         ON ( B~EBELN = C~EBELN AND B~EBELP = C~EBELP )
         LEFT OUTER JOIN EKET AS D
         ON ( B~EBELN = D~EBELN AND B~EBELP = D~EBELP )
         LEFT OUTER JOIN MSEG AS E
         ON ( B~EBELN = E~EBELN AND B~EBELP = E~EBELP AND E~LFBNR = B~LFBNR AND E~BWART = '101' )
         LEFT OUTER JOIN MAKT AS F
         ON ( B~MATNR = F~MATNR )
         LEFT OUTER JOIN MARA AS G
         ON ( B~MATNR = G~MATNR )
         INTO TABLE @DATA(IT_TABLE)
         WHERE A~BUDAT IN @S_DATE ."AND A~BELNR = '5105617899'.


    IT_FINAL = CORRESPONDING #( IT_TABLE ).

    LOOP AT IT_FINAL ASSIGNING FIELD-SYMBOL(<WA_FINAL>).

      DATA(IT_READ) = IT_TABLE[ INVOICENO = <WA_FINAL>-INVOICENO PURCHASEORDERNO = <WA_FINAL>-PURCHASEORDERNO PURCHASEORDERITEM = <WA_FINAL>-PURCHASEORDERITEM ].

      SELECT SINGLE LTEXT FROM T003T INTO <WA_FINAL>-TRANSACTIONTYPE WHERE BLART = IT_READ-TRANSACTIONTYPE AND SPRAS = sy-LANGU.

      <WA_FINAL>-BUSPLACESECT = |{ IT_READ-BUSPLACE } / { IT_READ-SECT }|.
      <WA_FINAL>-NETPOVALUE = <WA_FINAL>-NETPOVALUE / 100.
      <WA_FINAL>-NETPRICE = <WA_FINAL>-NETPRICE / 100.
      <WA_FINAL>-AMOUNT = <WA_FINAL>-AMOUNT / 100.
      <WA_FINAL>-AMOUNT2 = <WA_FINAL>-AMOUNT2 / 100.

      SELECT SINGLE VTEXT FROM TVZBT INTO <WA_FINAL>-PAYMENTTERMS WHERE ZTERM = IT_READ-PAYMENTTERMS.

        IF <WA_FINAL>-PAYMENTTERMS IS INITIAL.
              <WA_FINAL>-PAYMENTTERMS = 'Due Immediately'.
        ENDIF.

      SELECT SINGLE ERNAM FROM EKKO INTO <WA_FINAL>-CREATEDBY WHERE EBELN = <WA_FINAL>-PURCHASEORDERNO.

      SELECT SINGLE ADRNR FROM LFA1 INTO @DATA(WA_ADRNR) WHERE LIFNR = @IT_READ-VENDORCODE.
      SELECT SINGLE * FROM ADRC INTO @DATA(WA_ADRC) WHERE ADDRNUMBER = @WA_ADRNR.

      <WA_FINAL>-VENDORNAME = WA_ADRC-NAME1.
*       <WA_FINAL>-NAME = |{ WA_ADRC-NAME1 }, { WA_ADRC-HOUSE_NUM1 }, { WA_ADRC-STREET }, { WA_ADRC-CITY1 }|.

      SELECT SINGLE WGBEZ FROM T023T INTO <WA_FINAL>-MATERIALGROUPDESC WHERE MATKL = <WA_FINAL>-MATERIALGROUP.
      SELECT SINGLE TEXT1 FROM T007S INTO <WA_FINAL>-TAXDESC WHERE MWSKZ = <WA_FINAL>-TAXCODE AND SPRAS = SY-LANGU AND KALSM = 'ZMNTAX'.


      SELECT SINGLE * FROM RBCO INTO @DATA(WA_RBCO) WHERE BELNR = @<WA_FINAL>-INVOICENO.

      <WA_FINAL>-GLACCOUNT = WA_RBCO-SAKNR.
      IF <WA_FINAL>-GLACCOUNT IS NOT INITIAL.
        <WA_FINAL>-SHORTTEXT = 'Freight Charges'.
      ENDIF.
      IF WA_RBCO-SHKZG = 'S'.
        <WA_FINAL>-DEBITCREDIT = 'DEBIT'.
      ELSEIF WA_RBCO-SHKZG = 'H'.
        <WA_FINAL>-DEBITCREDIT = 'CREDIT'.
      ENDIF.

      <WA_FINAL>-AMOUNTINDOCCURRENCY = WA_RBCO-WRBTR.
      <WA_FINAL>-TAXCODE2 = WA_RBCO-MWSKZ.



      CONDENSE : <WA_FINAL>-NETPOVALUE,<WA_FINAL>-NETPRICE,<WA_FINAL>-QUANTITYRECV,<WA_FINAL>-QTYORDERED,<WA_FINAL>-AMOUNT2,<WA_FINAL>-QUANTITY,
                 <WA_FINAL>-AMOUNT,<WA_FINAL>-AMOUNT2,<WA_FINAL>-TAXAMOUNT,<WA_FINAL>-PRICEUNIT,<WA_FINAL>-GRQTYINOPUR,
                 <WA_FINAL>-DELIVERYNOTEQTY,<WA_FINAL>-AMOUNTINDOCCURRENCY,<WA_FINAL>-LOCALCURRENYAMOUNT.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          INPUT  = <WA_FINAL>-PURCHASEORDERNO
        IMPORTING
          OUTPUT = <WA_FINAL>-PURCHASEORDERNO.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          INPUT  = <WA_FINAL>-PURCHASEORDERITEM
        IMPORTING
          OUTPUT = <WA_FINAL>-PURCHASEORDERITEM.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          INPUT  = <WA_FINAL>-PROFITCENTER
        IMPORTING
          OUTPUT = <WA_FINAL>-PROFITCENTER.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          INPUT  = <WA_FINAL>-ITEM
        IMPORTING
          OUTPUT = <WA_FINAL>-ITEM.

      <WA_FINAL>-MATERIAL = |{ <WA_FINAL>-MATERIAL ALPHA = OUT }|.


    ENDLOOP.


    DATA(JSON_WRITER) = CL_SXML_STRING_WRITER=>CREATE(
                       TYPE = IF_SXML=>CO_XT_JSON ).
    CALL TRANSFORMATION ID SOURCE RESULT = IT_FINAL
                           RESULT XML JSON_WRITER.
    DATA(JSON) = JSON_WRITER->GET_OUTPUT( ).

    DATA: LO_JSON_DATA TYPE REF TO ZCL_TREX_JSON_SERIALIZER,
          JSON1        TYPE STRING.

    CREATE OBJECT LO_JSON_DATA
      EXPORTING
        DATA = IT_FINAL.

* serialize data

    LO_JSON_DATA->SERIALIZE( ).

* get serialized json data string

    JSON1 = LO_JSON_DATA->GET_DATA( ).

    SERVER->RESPONSE->SET_CDATA(
         DATA = JSON1 ).





  ENDMETHOD.
